# Завдання 2
# Реалізуйте двійковий пошук для відсортованого масиву з дробовими числами. 
# Написана функція для двійкового пошуку повинна повертати кортеж, де 
# першим елементом є кількість ітерацій, потрібних для знаходження елемента. 
# Другим елементом має бути "верхня межа" — це найменший елемент, який 
# є більшим або рівним заданому значенню.

def binary_search(arr, x):
    low = 0
    high = len(arr) - 1
    mid = 0
    i = 0
 
    while low <= high:
        
        i=+1    

        mid = (high + low) // 2
 
        # якщо x більше за значення посередині списку, ігноруємо ліву половину
        if arr[mid] < x:
            low = mid + 1
 
        # якщо x менше за значення посередині списку, ігноруємо праву половину
        elif arr[mid] > x:
            high = mid - 1

        # інакше x присутній на позиції і повертаємо його
        else:
            return (i, arr[mid])
 
    # якщо елемент не знайдений
    return (i, arr[mid])

arr = [0.1, 0.2, 0.3, 0.4, 0.4, 0.5, 0.6, 0.66, 0.88]
x = 0.66
result = binary_search(arr, x)

print(f"high end element is present at index {result[1]}, found in {result[0]} iterations")
